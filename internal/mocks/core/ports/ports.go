// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/core/ports/ports.go

// Package mock_ports is a generated GoMock package.
package mock_ports

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/richmondgoh8/boilerplate/internal/core/domain"
)

// MockLinkRepository is a mock of LinkRepository interface.
type MockLinkRepository struct {
	ctrl     *gomock.Controller
	recorder *MockLinkRepositoryMockRecorder
}

// MockLinkRepositoryMockRecorder is the mock recorder for MockLinkRepository.
type MockLinkRepositoryMockRecorder struct {
	mock *MockLinkRepository
}

// NewMockLinkRepository creates a new mock instance.
func NewMockLinkRepository(ctrl *gomock.Controller) *MockLinkRepository {
	mock := &MockLinkRepository{ctrl: ctrl}
	mock.recorder = &MockLinkRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLinkRepository) EXPECT() *MockLinkRepositoryMockRecorder {
	return m.recorder
}

// GetURL mocks base method.
func (m *MockLinkRepository) GetURL(ctx context.Context, id string) (domain.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURL", ctx, id)
	ret0, _ := ret[0].(domain.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURL indicates an expected call of GetURL.
func (mr *MockLinkRepositoryMockRecorder) GetURL(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURL", reflect.TypeOf((*MockLinkRepository)(nil).GetURL), ctx, id)
}

// UpdateURL mocks base method.
func (m *MockLinkRepository) UpdateURL(ctx context.Context, link domain.Link) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateURL", ctx, link)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateURL indicates an expected call of UpdateURL.
func (mr *MockLinkRepositoryMockRecorder) UpdateURL(ctx, link interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateURL", reflect.TypeOf((*MockLinkRepository)(nil).UpdateURL), ctx, link)
}
